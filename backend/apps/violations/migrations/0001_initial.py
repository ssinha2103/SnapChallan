# Generated by Django 5.0.1 on 2025-07-16 07:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_violations', models.PositiveIntegerField(default=0)),
                ('pending_violations', models.PositiveIntegerField(default=0)),
                ('approved_violations', models.PositiveIntegerField(default=0)),
                ('rejected_violations', models.PositiveIntegerField(default=0)),
                ('challans_issued', models.PositiveIntegerField(default=0)),
                ('challans_paid', models.PositiveIntegerField(default=0)),
                ('total_fines_collected', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_rewards_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'violations_statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ViolationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ai_detectable', models.BooleanField(default=False)),
                ('confidence_threshold', models.FloatField(default=0.7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'violations_violation_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('location_address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('vehicle_number', models.CharField(blank=True, max_length=20)),
                ('vehicle_type', models.CharField(blank=True, max_length=50)),
                ('vehicle_color', models.CharField(blank=True, max_length=30)),
                ('occurred_at', models.DateTimeField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('challan_issued', 'Challan Issued'), ('payment_received', 'Payment Received'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('ai_processed', models.BooleanField(default=False)),
                ('ai_confidence_score', models.FloatField(blank=True, null=True)),
                ('ai_detected_objects', models.JSONField(default=dict)),
                ('ai_extracted_data', models.JSONField(default=dict)),
                ('reward_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reward_paid', models.BooleanField(default=False)),
                ('reward_paid_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_violations', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_violations', to=settings.AUTH_USER_MODEL)),
                ('violation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='violations.violationtype')),
            ],
            options={
                'db_table': 'violations_violation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Challan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challan_number', models.CharField(max_length=50, unique=True)),
                ('owner_name', models.CharField(max_length=200)),
                ('owner_address', models.TextField()),
                ('owner_phone', models.CharField(blank=True, max_length=15)),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('issued', 'Issued'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('issued_at', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField()),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('morth_challan_id', models.CharField(blank=True, max_length=100)),
                ('morth_response', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('violation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='challan', to='violations.violation')),
            ],
            options={
                'db_table': 'violations_challan',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['challan_number'], name='violations__challan_24a53f_idx'), models.Index(fields=['status'], name='violations__status_30a610_idx'), models.Index(fields=['due_date'], name='violations__due_dat_fc8e54_idx')],
            },
        ),
        migrations.CreateModel(
            name='ViolationComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='violations.violation')),
            ],
            options={
                'db_table': 'violations_violation_comment',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['violation', '-created_at'], name='violations__violati_ebdb5c_idx'), models.Index(fields=['author'], name='violations__author__35ae1d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ViolationMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], max_length=10)),
                ('gridfs_file_id', models.CharField(max_length=100)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('camera_make', models.CharField(blank=True, max_length=100)),
                ('camera_model', models.CharField(blank=True, max_length=100)),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_files', to='violations.violation')),
            ],
            options={
                'db_table': 'violations_violation_media',
                'ordering': ['violation', 'uploaded_at'],
                'indexes': [models.Index(fields=['violation'], name='violations__violati_13f208_idx'), models.Index(fields=['media_type'], name='violations__media_t_bb51dd_idx'), models.Index(fields=['processed'], name='violations__process_61f848_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['reporter', '-created_at'], name='violations__reporte_536b35_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['status'], name='violations__status_f07abc_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['violation_type'], name='violations__violati_318575_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['city', 'state'], name='violations__city_d99987_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['occurred_at'], name='violations__occurre_fbccc2_idx'),
        ),
    ]
